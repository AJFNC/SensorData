@model IEnumerable<SensorData.Models.Frequency>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    DateTime PegaHoraBrasilia() => TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.FindSystemTimeZoneById("E. South America Standard Time"));
    var dateTimeNow = PegaHoraBrasilia().ToLocalTime();

    var labelsModel = "";
    float frl1Model;
    float frl2Model;
    float frl3Model;
    String[]? labelsArray = new String[20];
    float[]? frl1Array = new float[20];
    float[]? frl2Array = new float[20];
    float[]? frl3Array = new float[20];

    float A;
    float B;

    int sensorSpot = 2;
    var index = 0;

}


<h2>12 horas de leituras de dados</h2>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h2 class="h2">Umidade de solo do sensor (%): SS</h2>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a class="nav-link" asp-area="" asp-controller="Frequencies1" asp-action="Index">Bananas</a>
    </div>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary">Compartilhar</button>
            <button type="button" class="btn btn-sm btn-outline-secondary">Exportar</button>
        </div>
        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
            <span data-feather="calendar" class="align-text-bottom"></span>
            Semana
        </button>
    </div>
</div>

<canvas class="my-4 w-100" id="lineChart" width="900" height="380"></canvas>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Sensor_Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Frl1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Frl2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Frl3)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReadDateTime)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Where(t => t.ReadDateTime >= dateTimeNow.AddHours(-12)).Where(t => t.Sensor_Id == sensorSpot).ToList())
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Sensor_Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Frl1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Frl2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Frl3)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReadDateTime)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>




<script src="../lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js" integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js" integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha" crossorigin="anonymous"></script>

<script src="../lib/bootstrap/dist/css/dashboard.css"></script>
<script src="../lib/bootstrap/dist/css/dashboard.rtl.css"></script>
@*<script src="../lib/bootstrap/dist/js/dashboard.js"></script>*@


<script>
    console.log("Teste de console no javascript");
    // Graphs
    const ctxA = document.getElementById('lineChart');
    createGraphic(ctxA);
    function createGraphic(ctx) {

    @foreach (var item in Model.Where(t => t.ReadDateTime >= dateTimeNow.AddHours(-12)).Where(t => t.Sensor_Id == sensorSpot).ToList())
    {
        Console.Write(item.Sensor_Id.ToString() + " " + item.Frl1 + " " + item.Frl2 + " " + item.Frl3 + " ");
        labelsModel = item.ReadDateTime.ToString();
        frl1Model = item.Frl1;
        frl2Model = item.Frl2;
        frl3Model = item.Frl3;
        labelsArray[index] = labelsModel;
        frl1Array[index] = frl1Model;
        frl2Array[index] = frl2Model;
        frl3Array[index] = frl3Model;
        index++;
    };
        //// Graphs
        //const ctx = document.getElementById('lineChart');
        // eslint-disable-next-line no-unused-vars
        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: "Frl1",
                    data: [],
                    lineTension: 0,
                    backgroundColor: 'transparent',
                    borderColor: '#007bff',
                    borderWidth: 4,
                    pointBackgroundColor: '#008bff'
                },
                {
                    label: "Frl2",
                    data: [],
                    lineTension: 0,
                    backgroundColor: 'transparent',
                    borderColor: '#ff8b00',
                    borderWidth: 4,
                    pointBackgroundColor: '#ff8b00'
                },
                {
                    label: "Frl3",
                    data: [],
                    lineTension: 0,
                    backgroundColor: 'transparent',
                    borderColor: '#00ff8b',
                    borderWidth: 4,
                    pointBackgroundColor: '#00ff8b'
                },
                {
                    label: "Capacidade de campo SS",
                    data: [],
                    lineTension: 0,
                    backgroundColor: 'transparent',
                    borderColor: '#ff0000',
                    borderWidth: 1,
                    pointBackgroundColor: '#ff0000'
                }
                ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                },
                legend: {
                    display: false
                }
            }
        });
        var dtLabels = new Array();         //Array Javascript
        var dtFrl1 = new Array();
        var dtFrl2 = new Array();
        var dtFrl3 = new Array();
        var indexJS = 0;
    @for (var i = 0; i < labelsArray.Length; i++)
    {
        @:(dtLabels[indexJS] = '@labelsArray[i]');
        @:(dtFrl1[indexJS] = '@frl1Array[i]'.replace(',', '.'));
        @:(dtFrl2[indexJS] = '@frl2Array[i]'.replace(',', '.'));
        @:(dtFrl3[indexJS] = '@frl3Array[i]'.replace(',', '.'));
        @:(indexJS++);
    }
            for (let i = 0; i < dtLabels.length; i++) {
            if (dtLabels[i] == 0)
                break;
            myChart.data.labels[i] = dtLabels[i];
            myChart.data.datasets[0].data[i] = dtFrl1[i];
            myChart.data.datasets[1].data[i] = dtFrl2[i];
            myChart.data.datasets[2].data[i] = dtFrl3[i];
            myChart.data.datasets[3].data[i] = 11.6;
        }
        myChart.update();
    }



</script>