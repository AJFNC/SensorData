@model IEnumerable<SensorData.Models.Frequency>

@{
    ViewData["Title"] = "ViewTable";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sensorSpot = 3;   //para teste usaremos o 2, para publicar volta o 3
    DateTime PegaHoraBrasilia() => TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.FindSystemTimeZoneById("E. South America Standard Time"));
    //var dateTimeNow = PegaHoraBrasilia().ToLocalTime();

    Frequency[] tempItemArr = new Frequency[550];
    List<Frequency> freqList = new List<Frequency>();

    var initialHour = 0;
    var initialMinute = 0;

    var index = 0;
    var indexT = 0;

}

<h2>Tabela</h2>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Sensor_Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Frl1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Frl2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Frl3)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReadDateTime)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Where(t => t.ReadDateTime >= PegaHoraBrasilia().AddHours(-28)).Where(t => t.Sensor_Id == sensorSpot).ToList())                          //OrderByDescending(o => o.ReadDateTime).ToList())
        {
            item.ReadDateTime = item.ReadDateTime.AddHours(3);         //Time correction adding 3 hours
            tempItemArr[index] = item;

            index++;
            if (index >= tempItemArr.Length)
            {
                break;
            }



        }

        @for (var i = 0; i < tempItemArr.Length; i++)
        {
            if (tempItemArr[i] == null)
            {
                break;
            }

            initialHour = tempItemArr[i].ReadDateTime.Hour;
            initialMinute = tempItemArr[i].ReadDateTime.Minute;

            if (i + 1 >= 550)
                break;

            if (tempItemArr[i + 1] == null)
            {

                freqList.Add(tempItemArr[i]);

                break;
            }
            else
            {
                if (tempItemArr[i + 1].ReadDateTime.Hour <= initialHour)
                {
                    if (tempItemArr[i + 1].ReadDateTime.Minute < initialMinute + 3)
                    {
                        continue;
                    }
                }

            }


            //Save only the last reg transmitted

            if (i >= 550)
                break;

            freqList.Add(tempItemArr[i]);

            indexT++;

        }



        @foreach (var item in freqList.OrderByDescending(o => o.ReadDateTime))
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Sensor_Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Frl1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Frl2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Frl3)
                </td>
                <td>
                    @item.ReadDateTime.ToString("dd/MM/yyyy HH:mm")
                </td>

            </tr>


        }
    </tbody>
</table>
<div class="btn-toolbar mb-2 mb-md-0">
    <p>
        <a asp-action="Index">Gráfico</a>
    </p>
</div>
